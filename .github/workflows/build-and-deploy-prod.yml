# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Deploy Stack

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Test api
        working-directory: ./src/web-api
        run: |
          npm run build:test -- --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }} && npm run docker:test
  build-admin-ui:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}
      - name: Admin UI - Build and Push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.REPOSITORY_NAME }}/ppo-admin-ui:${{ github.ref_name }},${{ secrets.REPOSITORY_NAME }}/ppo-admin-ui:stable
          context: ./src/ui
          file: ./src/ui/admin.Dockerfile
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
  build-client-ui:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}
      - name: UI - Build and Push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.REPOSITORY_NAME }}/ppo-ui:${{ github.ref_name }},${{ secrets.REPOSITORY_NAME }}/ppo-ui:stable
          context: ./src/ui
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
  build-calc-odds-api:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}
      - name: CalcOdds Api - Build and Push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.REPOSITORY_NAME }}/ppo-calc-odds:${{ github.ref_name }},${{ secrets.REPOSITORY_NAME }}/ppo-calc-odds:stable
          context: ./src/calc-odds-api
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
  build-web-api:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}
      - name: Web Api - Build and Push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.REPOSITORY_NAME }}/ppo-api:${{ github.ref_name }},${{ secrets.REPOSITORY_NAME }}/ppo-api:stable
          context: ./src/web-api
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
  migrate-db:
    needs: [build-admin-ui, build-client-ui, build-web-api, build-calc-odds-api]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Run migrations
        working-directory: ./src/web-api
        env:
          DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }}
        run: npx prisma migrate deploy
  deploy:
    needs: migrate-db
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Change docker stack tag
        run: |
          sed -i "s/\${TAG}/${{ github.ref_name }}/g" docker-stack.yml
          sed -i "s/\${REPOSITORY_NAME}/${{ secrets.REPOSITORY_NAME }}/g" docker-stack.yml
      - name: Deploy Stack
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          remote_host: ${{ secrets.HOST }}
          remote_user: ${{ secrets.USERNAME }}
          remote_port: ${{ secrets.PORT }}
          remote_private_key: ${{ secrets.KEY }}
          registry: "docker.io"
          deploy_timeout: 300
          username: ${{ secrets.CONTAINER_USERNAME }}
          password: ${{ secrets.CONTAINER_PASSWORD }}
          stack_file: "docker-stack.yml"
          stack_name: "playpokerodds"
